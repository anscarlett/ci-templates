name: Build Rust Android App

on:
  push:
    branches: [ android ]
  pull_request:
    branches: [ android ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-registry-

      - name: Cache cargo build
        uses: actions/cache@v4
        with:
          path: |
            target
          key: ${{ runner.os }}-cargo-build-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-build-
            
      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: aarch64-linux-android
          override: true

      - name: Add additional Android targets  
        run: |
          rustup target add armv7-linux-androideabi
          rustup target add i686-linux-android
          rustup target add x86_64-linux-android

      - name: Install Android NDK and SDK
        uses: nttld/setup-ndk@v1
        with:
          ndk-version: r26d

      - name: Install cargo-ndk
        run: cargo install cargo-ndk

      - name: Build Android shared library
        run: |
          cd bevy-android-test
          cargo ndk -t arm64-v8a build --release

      - name: Copy shared library to build directory
        run: |
          mkdir -p app-build/lib/arm64-v8a
          cp bevy-android-test/target/aarch64-linux-android/release/libbevy_android_test.so app-build/lib/arm64-v8a/

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: rust-android-app
          path: ./app-build/*

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: rust-android-app
          path: ./release-artifacts

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: ./release-artifacts/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
